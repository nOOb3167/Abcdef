%header{
#include <assimp.h>
#include <aiScene.h>
#include <cogl_include.h>

#include <error.h>
#include <Nxt.h>

#include <src/mai-bone.h>

struct GMaiNodePtrArray_struct;
%}

class Mai:Node from G:Object
{
 public virtual void
 something (self);
 
 public Mai:Node *parent
   unrefwith g_object_unref;
 
 /** WARNING IMPLICIT DECLARATION OF G_MAI_NODE_PTR_ARRAY_UNREF */
 public struct GMaiNodePtrArray_struct *children
   destroywith g_mai_node_ptr_array_unref;
   
 public char * name
   destroywith g_free;
   
 public GArray *mesh_verts
   destroywith g_array_unref;
   
 public GArray *mesh_indices
   destroywith g_array_unref;
   
 public GArray *mesh_uvs
   destroywith g_array_unref;
   
 public CoglMatrix *transformation
   destroywith g_free;
   
 public GMaiBonePtrArray *bones
   destroywith g_mai_bone_ptr_array_unref;

 class_init (class)
 {
  //class->something = _abcdalt_something;
 }
}

%adh{
XPTR_ARRAY_MACRO_TYPE_DECLARE (mai_node, MaiNode);

MaiNode *
mai_node_new_from (struct aiScene *scene, struct aiNode *from, MaiNode *parent);

void
mai_node_draw_recursive (MaiNode *self);

void
_mai_node_draw_recursive (MaiNode *self, CoglMatrix *acc_mtx);
%}
